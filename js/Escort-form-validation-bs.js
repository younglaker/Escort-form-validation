// Generated by CoffeeScript 1.6.3
(function() {
  (function($) {
    $.fn.EscortForm = function(options) {
      var form, opts, selector;
      opts = $.extend({}, $.fn.EscortForm.options, options);
      selector = "input, textarea, select";
      form = this;
      return form.submit(function() {
        var addTip, ele, qualified;
        qualified = true;
        form.find("span").remove(".es-tips");
        ele = {
          required: [],
          match: [],
          num: [],
          max: [],
          min: [],
          maxlen: [],
          minlen: [],
          email: [],
          regex: []
        };
        form.find(selector).each(function() {
          if ($(this).attr("esRequired") === "true") {
            ele.required.push(this);
          }
          if ($(this).attr("esMatch")) {
            ele.match.push(this);
          }
          if ($(this).attr("esNum") === "true") {
            ele.num.push(this);
          }
          if ($(this).attr("esMax")) {
            ele.max.push(this);
          }
          if ($(this).attr("esMin")) {
            ele.min.push(this);
          }
          if ($(this).attr("esMaxLen")) {
            ele.maxlen.push(this);
          }
          if ($(this).attr("esMinLen")) {
            ele.minlen.push(this);
          }
          if ($(this).attr("esEmail") === "true") {
            ele.email.push(this);
          }
          if ($(this).attr("esRegex")) {
            return ele.regex.push(this);
          }
        });
        if (opts.version === 2) {
          addTip = $.fn.EscortForm.tips2;
        } else if (opts.version === 3) {
          addTip = $.fn.EscortForm.tips3;
        }
        $(ele.required).each(function() {
          var val;
          val = $.fn.EscortForm.trim(this.value);
          if (val === "") {
            qualified = false;
            return addTip(this, opts.tip_required);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.match).each(function() {
          var name, t, val;
          name = $(this).attr("esMatch");
          val = this.value;
          t = this;
          return form.find('[name=' + name + ']').each(function() {
            if (this.value !== val) {
              qualified = false;
              return addTip(t, opts.tip_mat);
            }
          });
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.num).each(function() {
          if (isNaN(this.value) === true) {
            qualified = false;
            return addTip(this, opts.tip_num);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.max).each(function() {
          var attr;
          if (this.value > $(this).attr("esMax")) {
            qualified = false;
            attr = $(this).attr("esMax");
            opts.tip_max = $.fn.EscortForm.tipCheck(opts.tip_max, attr);
            return addTip(this, opts.tip_max);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.min).each(function() {
          var attr;
          if (this.value < $(this).attr("esMin")) {
            qualified = false;
            attr = $(this).attr("esMin");
            opts.tip_min = $.fn.EscortForm.tipCheck(opts.tip_min, attr);
            return addTip(this, opts.tip_min);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.maxlen).each(function() {
          var attr;
          if (this.value.length > $(this).attr("esMaxLen")) {
            qualified = false;
            attr = $(this).attr("esMaxLen");
            opts.tip_maxlen = $.fn.EscortForm.tipCheck(opts.tip_maxlen, attr);
            return addTip(this, opts.tip_maxlen);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.minlen).each(function() {
          var attr;
          if (this.value.length < $(this).attr("esMinLen")) {
            qualified = false;
            attr = $(this).attr("esMinLen");
            opts.tip_minlen = $.fn.EscortForm.tipCheck(opts.tip_minlen, attr);
            return addTip(this, opts.tip_minlen);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.email).each(function() {
          var mail, reg_email;
          reg_email = /^(\w)+(\.\w+)*@(\w)+((\.\w+)+)$/;
          mail = reg_email.test(this.value);
          if (!mail) {
            qualified = false;
            return addTip(this, opts.tip_email);
          }
        });
        if (qualified !== true) {
          return false;
        }
        $(ele.regex).each(function() {
          var attr, reg, test;
          reg = new RegExp($(this).attr("esRegex"));
          test = reg.test(this.value);
          if (!test) {
            qualified = false;
            attr = $(this).attr("esRegex");
            opts.tip_regex = $.fn.EscortForm.tipCheck(opts.tip_regex, attr);
            return addTip(this, opts.tip_regex);
          }
        });
        if (qualified !== true) {
          return false;
        }
      });
    };
    $.fn.EscortForm.tipCheck = function(tip, attr) {
      if (tip.match(/_attr_/)) {
        return tip.replace(/_attr_/, attr);
      } else {
        return tip;
      }
    };
    $.fn.EscortForm.tips2 = function(ele, text) {
      $(ele).closest(".controls").find("span").remove(".es-tips");
      $(ele).closest(".controls").append("<span class='help-inline tip-red es-tips'>aaa</span>");
      return $(ele).closest(".controls").find(".es-tips").html(text);
    };
    $.fn.EscortForm.tips3 = function(ele, text) {
      $(ele).closest(".form-group").find("span").remove(".es-tips");
      $(ele).closest(".form-group").append("<span class='help-inline tip-red es-tips'>aaa</span>");
      return $(ele).closest(".form-group").find(".es-tips").html(text);
    };
    $.fn.EscortForm.trim = function(str) {
      if (String.prototype.trim) {
        return str.trim();
      } else {
        return str.replace(/^\s+|\s+$/g, "");
      }
    };
    $.fn.EscortForm.options = {
      version: 3,
      tip_required: "Required here",
      tip_mat: "Can't match last input",
      tip_num: "Please enter a number",
      tip_max: "Too large",
      tip_min: "Too small",
      tip_maxlen: "Too long",
      tip_minlen: "Too short",
      tip_email: "Please enter correct email",
      tip_regex: "Not match the regex"
    };
    return true;
  })(jQuery);

}).call(this);
